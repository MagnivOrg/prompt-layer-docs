{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "paths": {
    "/rest/track-request": {
      "post": {
        "summary": "Track Request",
        "operationId": "trackRequest",
        "tags": ["request"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "function_name": {
                    "type": "string",
                    "description": "The name of the function. For example, if you are using OpenAI it should be either `openai.Completion.create` or `openai.ChatCompletion.create`. These are specific function signatures that PromptLayer uses to parse the `request_response`. Some integration libraries use special `function_name`'s such as `langchain.PromptLayerChatOpenAI`."
                  },
                  "kwargs": {
                    "type": "object",
                    "description": "Keyword arguments that are passed into the LLM (such as OpenAI's API). Normally it should include `engine` and `prompt` at the very least. If you are using a chat completion or GPT-4, it should include `messages` instead of `prompt`."
                  },
                  "request_response": {
                    "type": "object",
                    "description": "The LLM response. This response must be formatted exactly in OpenAI's response format."
                  },
                  "request_start_time": {
                    "type": "integer",
                    "description": "The time at which the LLM request was initiated."
                  },
                  "request_end_time": {
                    "type": "integer",
                    "description": "The time at which the LLM request was completed."
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "An array of string tags to tag this request on the PromptLayer dashboard.",
                    "optional": true
                  },
                  "prompt_id": {
                    "type": "string",
                    "description": "The ID of the prompt in the PromptLayer Registry that you used for this request (see `/prompt-templates/{prompt_name}` on how to get this id or you can get it from the URL in the dashboard).",
                    "optional": true
                  },
                  "prompt_input_variables": {
                    "type": "object",
                    "description": "The input variables you used for a template. This is used for syntax highlighting and, more importantly used, for backtesting when you want to iterate a prompt.",
                    "optional": true
                  },
                  "prompt_version": {
                    "type": "integer",
                    "description": "It is the version of the prompt that you are trying to track. This should be an integer of a prompt that you are tracking.",
                    "optional": true
                  },
                  "api_key": {
                    "type": "string",
                    "description": "The API key for authentication."
                  },
                  "group_id": {
                    "type": "integer",
                    "description": "The ID of the group that you want to associate with this request. This is useful for tracking requests that are part of a group, such as a conversation or a session."
                  },
                  "return_prompt_blueprint": {
                    "type": "boolean",
                    "description": "If you want to return the data that is associated with the request, set this to `true`. This will return the request_id and the request data."
                  }
                },
                "required": [
                  "function_name",
                  "kwargs",
                  "request_response",
                  "request_start_time",
                  "request_end_time",
                  "api_key"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request tracked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "request_id": {
                      "type": "integer",
                      "description": "The unique identifier for the tracked request."
                    },
                    "prompt_blueprint": {
                      "type": "object",
                      "description": "The prompt blueprint that was used for this request."
                    }
                  },
                  "required": ["success", "message", "request_id"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/rest/publish-prompt-template": {
      "post": {
        "summary": "Publish Prompt Template",
        "operationId": "publish_prompt_template_rest_publish_prompt_template_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Publish"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/prompts": {
      "get": {
        "tags": ["prompts"],
        "summary": "List",
        "operationId": "list_rest_prompts__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "X-Api-Key" },
            "name": "X-API-KEY",
            "in": "header"
          },
          {
            "in": "query",
            "name": "page",
            "schema": { "type": "integer", "title": "Page" }
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": { "type": "integer", "title": "Per Page" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api__schemas__pagination__Response"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/rest/get-prompt-template": {
      "get": {
        "summary": "Get Prompt Template",
        "operationId": "get_prompt_template_rest_get_prompt_template_get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "X-Api-Key" },
            "name": "X-API-KEY",
            "in": "header"
          },
          {
            "in": "query",
            "name": "prompt_name",
            "required": true,
            "schema": { "type": "string", "title": "Prompt Name" }
          },
          {
            "in": "query",
            "name": "version",
            "schema": { "type": "integer", "title": "Version" }
          },
          {
            "in": "query",
            "name": "label",
            "schema": { "type": "string", "title": "Label" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPrompt"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/prompt-templates/{prompt_name}": {
      "post": {
        "tags": ["prompt-templates"],
        "summary": "Get Prompt Template by ID",
        "operationId": "get_prompt_templates__prompt_name__post",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "X-Api-Key" },
            "name": "X-API-KEY",
            "in": "header"
          },
          {
            "name": "prompt_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "prompt_name"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  { "$ref": "#/components/schemas/GetPromptTemplate" },
                  { "type": "null" }
                ],
                "title": "Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPromptTemplateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/prompt-templates/{prompt_name}/labels": {
      "get": {
        "tags": ["prompt-templates", "release-labels"],
        "summary": "Get Prompt Template Labels",
        "operationId": "get_prompt_templates_labels_prompt_name__post",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "X-Api-Key" },
            "name": "X-API-KEY",
            "in": "header"
          },
          {
            "name": "prompt_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "prompt_name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPromptTemplateLabelResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/prompts/{prompt_id}/label": {
      "post": {
        "tags": ["prompts", "labels"],
        "summary": "Create a new label for a prompt",
        "operationId": "create_prompt_label",
        "parameters": [
          {
            "name": "prompt_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "prompt_id"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "prompt_version_number": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": ["prompt_version_number", "name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "prompt_id": {
                      "type": "integer"
                    },
                    "prompt_version_id": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "created_at",
                    "id",
                    "name",
                    "prompt_id",
                    "prompt_version_id"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/prompt-labels/{prompt_label_id}": {
      "patch": {
        "tags": ["prompt-templates", "release-labels"],
        "summary": "Move Prompt Template Labels",
        "operationId": "prompt_templates_labels_prompt_label_id__patch",
        "parameters": [
          {
            "name": "prompt_label_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "prompt_label_id"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Api-Key" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "prompt_version_number": { "type": "integer" }
                },
                "required": ["prompt_version_number"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "prompt_id": {
                      "type": "integer"
                    },
                    "prompt_version_id": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "created_at",
                    "id",
                    "name",
                    "prompt_id",
                    "prompt_version_id"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["prompt-templates", "release-labels"],
        "summary": "Delete Prompt Template Label",
        "operationId": "delete_prompt_templates_labels_prompt_label_id",
        "parameters": [
          {
            "name": "prompt_label_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "prompt_label_id"
            }
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Api-Key" }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/rest/prompt-templates": {
      "post": {
        "tags": ["rest", "prompt-templates"],
        "summary": "Publish Prompt Template",
        "operationId": "publish_prompt_template_rest_prompt_templates_post",
        "parameters": [
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": true,
            "schema": { "type": "string", "title": "X-Api-Key" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreatePromptTemplate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePromptTemplateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/rest/track-metadata": {
      "post": {
        "summary": "Track Metadata",
        "operationId": "trackMetadata",
        "tags": ["metadata"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "api_key": {
                    "type": "string",
                    "description": "Your PromptLayer API Key."
                  },
                  "request_id": {
                    "type": "integer",
                    "description": "The unique identifier for the request to which the metadata is associated."
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": true,
                    "description": "A dictionary of metadata items to associate with the request. Can include session_ids, user_ids, location, etc."
                  }
                },
                "required": ["api_key", "request_id", "metadata"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Metadata tracked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["success", "message"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/rest/track-group": {
      "post": {
        "summary": "Track Group",
        "operationId": "trackGroup",
        "tags": ["group"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "api_key": {
                    "type": "string",
                    "description": "Your PromptLayer API Key."
                  },
                  "request_id": {
                    "type": "integer",
                    "description": "The unique identifier for the request."
                  },
                  "group_id": {
                    "type": "integer",
                    "description": "The unique identifier for the group to be associated with the request."
                  }
                },
                "required": ["api_key", "request_id", "group_id"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Group tracked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["success", "message"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/rest/track-prompt": {
      "post": {
        "summary": "Track Prompt",
        "operationId": "trackPrompt",
        "tags": ["prompt"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "api_key": {
                    "type": "string",
                    "description": "Your PromptLayer API Key.",
                    "minLength": 1
                  },
                  "prompt_name": {
                    "type": "string",
                    "description": "The name of the prompt template.",
                    "minLength": 1
                  },
                  "prompt_input_variables": {
                    "type": "object",
                    "description": "Input variables for the prompt template.",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "optional": true
                  },
                  "request_id": {
                    "type": "integer",
                    "description": "The unique identifier for the request."
                  },
                  "version": {
                    "type": "integer",
                    "description": "The version of the prompt template. Both version and label cannot be specified. Only one or none.",
                    "optional": true
                  },
                  "label": {
                    "type": "string",
                    "description": "The label of the prompt template version. Both version and label cannot be specified. Only one or none.",
                    "minLength": 1,
                    "maxLength": 512,
                    "optional": true
                  }
                },
                "required": ["api_key", "prompt_name", "request_id"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Prompt tracked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["success", "message"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/rest/track-score": {
      "post": {
        "summary": "Track Score",
        "operationId": "trackScore",
        "tags": ["score"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_id": {
                    "type": "integer",
                    "description": "The `request_id` from `track-request`."
                  },
                  "score": {
                    "type": "integer",
                    "description": "The score you would like to give to this request (0 - 100).",
                    "minimum": 0,
                    "maximum": 100
                  },
                  "name": {
                    "type": "string",
                    "description": "A name for this request score. If not provided, the score will be tracked as `default`.",
                    "optional": true
                  },
                  "api_key": {
                    "type": "string",
                    "description": "Your PromptLayer API Key."
                  }
                },
                "required": ["request_id", "score", "api_key"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Score tracked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["success", "message"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/datasets/name/{dataset_name}": {
      "delete": {
        "summary": "Delete Datasets by Name",
        "operationId": "deleteDatasetsByName",
        "tags": ["datasets"],
        "parameters": [
          {
            "name": "dataset_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Name of the dataset to delete."
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key to authorize the operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["success", "message"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Dataset not found"
          }
        }
      }
    },
    "/reports/name/{report_name}": {
      "delete": {
        "summary": "Delete Reports by Name",
        "operationId": "deleteReportsByName",
        "tags": ["reports"],
        "parameters": [
          {
            "name": "report_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Name of the report to archive."
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key to authorize the operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["success", "message"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Report not found"
          }
        }
      }
    },
    "/reports": {
      "post": {
        "summary": "Create Evaluation Pipeline",
        "operationId": "createEvaluationPipeline",
        "tags": ["reports"],
        "parameters": [
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key to authorize the operation."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the report to be created. Must be between 1 and 255 characters in length.",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "test_dataset_id": {
                    "type": "integer",
                    "description": "The ID of the dataset on which the report will be based. The dataset must be within an accessible workspace to the user."
                  }
                },
                "required": ["name", "test_dataset_id"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Evaluation Pipeline created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "report_id": {
                      "type": "integer",
                      "description": "The ID of the created report."
                    }
                  },
                  "required": ["success", "message", "report_id"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/dataset-from-filter-params": {
      "post": {
        "summary": "Create Dataset from History",
        "operationId": "createDatasetFromFilterParams",
        "tags": ["dataset"],
        "parameters": [
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key to authorize the operation."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the dataset to be created."
                  },
                  "workspace_id": {
                    "type": "integer",
                    "description": "The ID of the workspace under which the dataset will be stored."
                  },
                  "q": {
                    "type": "string",
                    "description": "The search query for filtering the data."
                  },
                  "start_time": {
                    "type": "string",
                    "description": "The start time for the dataset's time range filter."
                  },
                  "end_time": {
                    "type": "string",
                    "description": "The end time for the dataset's time range filter."
                  },
                  "tags_and": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "A list of tags to filter by. This will perform an AND operation."
                  },
                  "tags_or": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "A list of tags to filter by. This will perform an OR operation."
                  },
                  "metadata_and": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    "description": "A list of metadata key-value pairs to filter by."
                  },
                  "metadata_or": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    "description": "A list of metadata key-value pairs to filter by."
                  },
                  "scores": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "operator": {
                          "type": "string"
                        },
                        "value": {
                          "type": "integer"
                        }
                      }
                    },
                    "description": "Score thresholds and conditions for filtering request logs."
                  },
                  "starred": {
                    "type": "boolean",
                    "description": "Only include favorited requests."
                  },
                  "prompt_template": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "version_numbers": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      }
                    },
                    "description": "Filters requests by the specified prompt template, defaulting to its latest version if no versions are specified."
                  },
                  "limit": {
                    "type": "integer",
                    "description": "The maximum number of rows that will be included in the dataset."
                  }
                },
                "required": ["name", "workspace_id"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Dataset created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "dataset_id": {
                      "type": "integer",
                      "description": "The ID of the created dataset."
                    }
                  },
                  "required": ["success", "message", "dataset_id"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/prompt-templates": {
      "get": {
        "tags": ["prompt-templates"],
        "summary": "Get All",
        "operationId": "get_all_prompt_templates__get",
        "parameters": [
          {
            "required": true,
            "schema": { "type": "string", "title": "X-Api-Key" },
            "name": "X-API-KEY",
            "in": "header"
          },
          {
            "in": "query",
            "name": "page",
            "schema": { "type": "integer", "title": "Page" }
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": { "type": "integer", "title": "Per Page" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListPromptTemplates" }
              }
            }
          }
        }
      }
    },
    "/log-request": {
      "post": {
        "tags": ["request"],
        "summary": "Log Request",
        "operationId": "logRequest",
        "parameters": [
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "title": "X-Api-Key"
            },
            "description": "API key to authorize the operation."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogRequestResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/BadRequestError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Base": {
        "properties": {
          "page": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Page",
            "default": 1
          },
          "per_page": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Per Page",
            "default": 30
          }
        },
        "type": "object",
        "title": "Base"
      },
      "BaseChatMessagePromptTemplate": {
        "properties": {
          "prompt": {
            "$ref": "#/components/schemas/PromptTemplate"
          },
          "additional_kwargs": {
            "type": "object",
            "title": "Additional Kwargs"
          },
          "role": {
            "type": "string",
            "title": "Role"
          }
        },
        "type": "object",
        "required": ["prompt", "role"],
        "title": "BaseChatMessagePromptTemplate",
        "description": "Chat message prompt template."
      },
      "ChatPromptTemplate": {
        "properties": {
          "input_variables": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Input Variables"
          },
          "messages": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/BaseChatMessagePromptTemplate"
                },
                {
                  "$ref": "#/components/schemas/Message"
                }
              ]
            },
            "type": "array",
            "title": "Messages"
          },
          "functions": {
            "items": {
              "$ref": "#/components/schemas/Function"
            },
            "type": "array",
            "title": "Functions"
          },
          "function_call": {
            "anyOf": [
              {
                "type": "string",
                "enum": ["none", "auto"]
              },
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              }
            ],
            "title": "Function Call",
            "default": "none"
          }
        },
        "type": "object",
        "required": ["input_variables", "messages"],
        "title": "ChatPromptTemplate",
        "description": "Chat Prompt Template"
      },
      "Function": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "parameters": {
            "type": "object",
            "title": "Parameters",
            "default": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "Function"
      },
      "FunctionCall": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "arguments": {
            "type": "string",
            "title": "Arguments"
          }
        },
        "type": "object",
        "required": ["name", "arguments"],
        "title": "FunctionCall"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Message": {
        "properties": {
          "role": {
            "type": "string",
            "enum": ["system", "user", "assistant", "function"],
            "title": "Role"
          },
          "function_call": {
            "$ref": "#/components/schemas/FunctionCall"
          },
          "content": {
            "type": "string",
            "title": "Content",
            "default": ""
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": ["role"],
        "title": "Message"
      },
      "PromptTemplate": {
        "properties": {
          "input_variables": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Input Variables"
          },
          "template": {
            "type": "string",
            "title": "Template"
          },
          "template_format": {
            "type": "string",
            "title": "Template Format",
            "default": "f-string"
          },
          "validate_template": {
            "type": "boolean",
            "title": "Validate Template",
            "default": true
          }
        },
        "type": "object",
        "required": ["input_variables", "template"],
        "title": "PromptTemplate",
        "description": "Completion Prompt Template"
      },
      "Prompt": {
        "properties": {
          "prompt_name": {
            "type": "string",
            "title": "Prompt Name",
            "description": "Prompt name has to be less than 128 characters and can only contain letters, numbers, and underscores. If a prompt exists with this name it will be pushed into an older version"
          },
          "prompt_template": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ChatPromptTemplate"
              },
              {
                "$ref": "#/components/schemas/SafePromptTemplate"
              }
            ],
            "title": "Prompt Template"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "description": "Array of string tags for a template",
            "default": []
          },
          "commit_message": {
            "type": "string",
            "title": "Commit Message",
            "description": "Commit message for the prompt version"
          },
          "metadata": { "$ref": "#/components/schemas/Metadata" }
        },
        "type": "object",
        "required": ["prompt_name", "prompt_template", "id"],
        "title": "Prompt"
      },
      "GetPrompt": {
        "allOf": [
          {
            "properties": {
              "id": {
                "type": "integer",
                "title": "Id",
                "description": "The id of the prompt"
              },
              "version": {
                "type": "integer",
                "title": "Version",
                "description": "The version of the prompt"
              }
            },
            "type": "object",
            "required": ["id"],
            "title": "GetPrompt"
          },
          {
            "$ref": "#/components/schemas/Prompt"
          }
        ]
      },
      "ListPrompt": {
        "allOf": [
          {
            "properties": {
              "id": {
                "type": "integer",
                "title": "Id",
                "description": "The id of the prompt"
              },
              "version_number": {
                "type": "integer",
                "title": "Version Number",
                "description": "The version number of the prompt"
              }
            },
            "type": "object",
            "required": ["id"],
            "title": "ListPrompt"
          },
          {
            "$ref": "#/components/schemas/Prompt"
          }
        ]
      },
      "Publish": {
        "allOf": [
          {
            "properties": {
              "api_key": {
                "type": "string",
                "title": "Api Key",
                "description": "Your PromptLayer API Key"
              },
              "metadata": { "$ref": "#/components/schemas/Metadata" }
            },
            "type": "object",
            "required": ["api_key"],
            "title": "Publish"
          },
          {
            "$ref": "#/components/schemas/Prompt"
          }
        ]
      },
      "Response": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "success": {
            "type": "boolean",
            "title": "Success"
          }
        },
        "type": "object",
        "required": ["id", "success"],
        "title": "Response"
      },
      "SafePromptTemplate": {
        "properties": {
          "input_variables": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Input Variables"
          },
          "template": {
            "type": "string",
            "title": "Template"
          },
          "template_format": {
            "type": "string",
            "title": "Template Format",
            "default": "f-string"
          },
          "validate_template": {
            "type": "boolean",
            "title": "Validate Template",
            "default": true
          }
        },
        "type": "object",
        "required": ["input_variables", "template"],
        "title": "SafePromptTemplate",
        "description": "Completion Prompt Template"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      },
      "api__schemas__pagination__Response": {
        "properties": {
          "page": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Page",
            "default": 1
          },
          "per_page": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Per Page",
            "default": 30
          },
          "total": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Total"
          },
          "pages": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Pages"
          },
          "items": {
            "items": { "$ref": "#/components/schemas/ListPrompt" },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["total", "pages", "items"],
        "title": "Response"
      },
      "Model": {
        "title": "Model",
        "type": "object",
        "properties": {
          "provider": { "title": "Provider", "type": "string" },
          "name": { "title": "Name", "type": "string" },
          "parameters": {
            "title": "Parameters",
            "default": {},
            "type": "object"
          }
        },
        "required": ["provider", "name"]
      },
      "Metadata": {
        "title": "Metadata",
        "type": "object",
        "properties": {
          "model": { "$ref": "#/components/schemas/Model" },
          "customField": {
            "type": "string"
          }
        },
        "definitions": {
          "Model": {
            "title": "Model",
            "type": "object",
            "properties": {
              "provider": { "title": "Provider", "type": "string" },
              "name": { "title": "Name", "type": "string" },
              "parameters": {
                "title": "Parameters",
                "default": {},
                "type": "object"
              }
            },
            "required": ["provider", "name"]
          }
        }
      },
      "GetPromptTemplate": {
        "properties": {
          "version": {
            "anyOf": [
              { "type": "integer", "exclusiveMinimum": 0.0 },
              { "type": "null" }
            ],
            "title": "Version"
          },
          "workspace_id": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Workspace Id"
          },
          "label": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Label"
          },
          "provider": {
            "anyOf": [
              { "type": "string", "enum": ["openai", "anthropic"] },
              { "type": "null" }
            ],
            "title": "Provider"
          },
          "input_variables": {
            "anyOf": [
              {
                "additionalProperties": { "type": "string" },
                "type": "object"
              },
              { "type": "null" }
            ],
            "title": "Input Variables"
          }
        },
        "type": "object",
        "title": "GetPromptTemplate"
      },
      "CompletionPrompt": {
        "additionalProperties": true,
        "properties": {
          "content": {
            "items": {
              "discriminator": {
                "mapping": {
                  "image_url": "#/components/schemas/ImageContent",
                  "text": "#/components/schemas/TextContent"
                },
                "propertyName": "type"
              },
              "oneOf": [
                { "$ref": "#/components/schemas/TextContent" },
                { "$ref": "#/components/schemas/ImageContent" }
              ]
            },
            "title": "Content",
            "type": "array"
          },
          "input_variables": {
            "default": [],
            "items": { "type": "string" },
            "title": "Input Variables",
            "type": "array"
          },
          "template_format": {
            "default": "f-string",
            "enum": ["f-string", "jinja2"],
            "title": "Template Format",
            "type": "string"
          },
          "type": {
            "const": "completion",
            "default": "completion",
            "enum": ["completion"],
            "title": "Type",
            "type": "string"
          }
        },
        "required": ["content"],
        "title": "CompletionTemplate",
        "type": "object"
      },
      "TextContent": {
        "properties": {
          "type": {
            "const": "text",
            "default": "text",
            "enum": ["text"],
            "title": "Type",
            "type": "string"
          },
          "text": { "title": "Text", "type": "string" }
        },
        "required": ["text"],
        "title": "TextContent",
        "type": "object"
      },
      "ImageURL": {
        "properties": {
          "url": { "type": "string", "title": "Url" },
          "detail": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Detail"
          }
        },
        "type": "object",
        "required": ["url"],
        "title": "ImageURL"
      },
      "ImageContent": {
        "properties": {
          "type": {
            "const": "image_url",
            "default": "image_url",
            "enum": ["image_url"],
            "title": "Type",
            "type": "string"
          },
          "image_url": { "$ref": "#/components/schemas/ImageURL" },
          "image_variable": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "default": null,
            "title": "Image Variable"
          }
        },
        "required": ["image_url"],
        "title": "ImageContent",
        "type": "object"
      },
      "SystemMessage": {
        "properties": {
          "input_variables": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Input Variables",
            "default": []
          },
          "template_format": {
            "type": "string",
            "enum": ["f-string", "jinja2"],
            "title": "Template Format",
            "default": "f-string"
          },
          "content": {
            "items": {
              "oneOf": [
                { "$ref": "#/components/schemas/TextContent" },
                { "$ref": "#/components/schemas/ImageContent" }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "image_url": "#/components/schemas/ImageContent",
                  "text": "#/components/schemas/TextContent"
                }
              }
            },
            "type": "array",
            "title": "Content"
          },
          "role": { "const": "system", "title": "Role", "default": "system" },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          }
        },
        "type": "object",
        "required": ["content"],
        "title": "SystemMessage"
      },
      "UserMessage": {
        "properties": {
          "input_variables": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Input Variables",
            "default": []
          },
          "template_format": {
            "type": "string",
            "enum": ["f-string", "jinja2"],
            "title": "Template Format",
            "default": "f-string"
          },
          "content": {
            "items": {
              "oneOf": [
                { "$ref": "#/components/schemas/TextContent" },
                { "$ref": "#/components/schemas/ImageContent" }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "image_url": "#/components/schemas/ImageContent",
                  "text": "#/components/schemas/TextContent"
                }
              }
            },
            "type": "array",
            "title": "Content"
          },
          "role": { "const": "user", "title": "Role", "default": "user" },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          }
        },
        "type": "object",
        "required": ["content"],
        "title": "UserMessage"
      },
      "AssistantMessage": {
        "properties": {
          "input_variables": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Input Variables",
            "default": []
          },
          "template_format": {
            "type": "string",
            "enum": ["f-string", "jinja2"],
            "title": "Template Format",
            "default": "f-string"
          },
          "content": {
            "anyOf": [
              {
                "items": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/TextContent" },
                    { "$ref": "#/components/schemas/ImageContent" }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "image_url": "#/components/schemas/ImageContent",
                      "text": "#/components/schemas/TextContent"
                    }
                  }
                },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Content"
          },
          "role": {
            "const": "assistant",
            "title": "Role",
            "default": "assistant"
          },
          "function_call": {
            "anyOf": [
              { "$ref": "#/components/schemas/FunctionCall" },
              { "type": "null" }
            ],
            "title": "Function Call",
            "deprecated": true,
            "description": "This field is deprecated. Please use `tool_calls` field to specify tool calls."
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "tool_calls": {
            "anyOf": [
              {
                "items": { "$ref": "#/components/schemas/ToolCall" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Tool Calls"
          }
        },
        "type": "object",
        "title": "AssistantMessage"
      },
      "FunctionMessage": {
        "properties": {
          "input_variables": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Input Variables",
            "default": []
          },
          "template_format": {
            "type": "string",
            "enum": ["f-string", "jinja2"],
            "title": "Template Format",
            "default": "f-string"
          },
          "content": {
            "anyOf": [
              {
                "items": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/TextContent" },
                    { "$ref": "#/components/schemas/ImageContent" }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "image_url": "#/components/schemas/ImageContent",
                      "text": "#/components/schemas/TextContent"
                    }
                  }
                },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Content"
          },
          "role": {
            "const": "function",
            "title": "Role",
            "default": "function"
          },
          "name": { "type": "string", "title": "Name" }
        },
        "type": "object",
        "required": ["name"],
        "title": "FunctionMessage"
      },
      "MessageFunctionCall": {
        "properties": { "name": { "type": "string", "title": "Name" } },
        "type": "object",
        "required": ["name"],
        "title": "MessageFunctionCall"
      },
      "ChatPrompt": {
        "properties": {
          "messages": {
            "items": {
              "discriminator": {
                "mapping": {
                  "assistant": "#/components/schemas/AssistantMessage",
                  "function": "#/components/schemas/FunctionMessage",
                  "placeholder": "#/components/schemas/PlaceholderMessage",
                  "system": "#/components/schemas/SystemMessage",
                  "tool": "#/components/schemas/ToolMessage",
                  "user": "#/components/schemas/UserMessage"
                },
                "propertyName": "role"
              },
              "oneOf": [
                { "$ref": "#/components/schemas/SystemMessage" },
                { "$ref": "#/components/schemas/UserMessage" },
                { "$ref": "#/components/schemas/AssistantMessage" },
                { "$ref": "#/components/schemas/FunctionMessage" },
                { "$ref": "#/components/schemas/ToolMessage" },
                { "$ref": "#/components/schemas/PlaceholderMessage" }
              ]
            },
            "title": "Messages",
            "type": "array"
          },
          "functions": {
            "anyOf": [
              {
                "items": { "$ref": "#/components/schemas/Function" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "default": null,
            "title": "Functions"
          },
          "tools": {
            "anyOf": [
              {
                "items": { "$ref": "#/components/schemas/Tool" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "default": null,
            "title": "Tools"
          },
          "function_call": {
            "anyOf": [
              { "type": "string" },
              { "$ref": "#/components/schemas/MessageFunctionCall" },
              { "type": "null" }
            ],
            "default": null,
            "title": "Function Call"
          },
          "tool_choice": {
            "anyOf": [
              { "type": "string" },
              { "$ref": "#/components/schemas/ChatToolChoice" },
              { "type": "null" }
            ],
            "default": null,
            "title": "Tool Choice"
          },
          "type": {
            "const": "chat",
            "default": "chat",
            "enum": ["chat"],
            "title": "Type",
            "type": "string"
          },
          "input_variables": {
            "default": [],
            "items": { "type": "string" },
            "title": "Input Variables",
            "type": "array"
          }
        },
        "required": ["messages"],
        "title": "ChatTemplate",
        "type": "object"
      },
      "GetPromptTemplateResponse": {
        "properties": {
          "id": { "type": "integer", "title": "Id" },
          "prompt_name": { "type": "string", "title": "Prompt Name" },
          "prompt_template": {
            "oneOf": [
              { "$ref": "#/components/schemas/CompletionPrompt" },
              { "$ref": "#/components/schemas/ChatPrompt" }
            ],
            "title": "Prompt Template",
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "chat": "#/components/schemas/ChatPrompt",
                "completion": "#/components/schemas/CompletionPrompt"
              }
            }
          },
          "metadata": {
            "anyOf": [
              { "$ref": "#/components/schemas/Metadata" },
              { "type": "null" }
            ]
          },
          "commit_message": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Commit Message"
          },
          "llm_kwargs": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Llm Kwargs",
            "description": "When you optionally specify `provider` in the body, `llm_kwargs` will be returned for that specific provider and you can pass these kwargs to the provider's API directly."
          },
          "version": { "type": "integer", "title": "Version" }
        },
        "type": "object",
        "required": ["id", "prompt_name", "prompt_template"],
        "title": "GetPromptTemplateResponse"
      },
      "GetPromptTemplateLabelResponse": {
        "properties": {
          "release_labels": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "prompt_version_id": { "type": "integer" },
                "prompt_version_number": { "type": "integer" },
                "release_label": { "type": "string" },
                "release_label_id": { "type": "integer" }
              },
              "required": [
                "prompt_version_id",
                "prompt_version_number",
                "release_label",
                "release_label_id"
              ]
            },
            "title": "Release Labels"
          }
        },
        "type": "object",
        "required": ["release_labels"],
        "title": "GetPromptTemplateLabelResponse"
      },
      "BasePromptTemplate": {
        "properties": {
          "prompt_name": {
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "title": "Prompt Name"
          },
          "tags": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Tags",
            "default": []
          }
        },
        "type": "object",
        "required": ["prompt_name"],
        "title": "BasePromptTemplate"
      },
      "PromptVersion": {
        "properties": {
          "prompt_template": {
            "oneOf": [
              { "$ref": "#/components/schemas/CompletionPrompt" },
              { "$ref": "#/components/schemas/ChatPrompt" }
            ],
            "title": "Prompt Template",
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "chat": "#/components/schemas/ChatPrompt",
                "completion": "#/components/schemas/CompletionPrompt"
              }
            }
          },
          "commit_message": {
            "anyOf": [
              { "type": "string", "maxLength": 72 },
              { "type": "null" }
            ],
            "title": "Commit Message"
          },
          "metadata": {
            "anyOf": [
              { "$ref": "#/components/schemas/Metadata" },
              { "type": "null" }
            ]
          }
        },
        "type": "object",
        "required": ["prompt_template"],
        "title": "PromptVersion"
      },
      "CreatePromptTemplate": {
        "properties": {
          "prompt_template": {
            "$ref": "#/components/schemas/BasePromptTemplate"
          },
          "prompt_version": { "$ref": "#/components/schemas/PromptVersion" },
          "release_labels": {
            "type": ["array", "null"],
            "items": { "type": "string" },
            "title": "Release Labels"
          }
        },
        "type": "object",
        "required": ["prompt_template", "prompt_version"],
        "title": "CreatePromptTemplate"
      },
      "CreatePromptTemplateResponse": {
        "properties": {
          "id": { "type": "integer", "title": "Id" },
          "prompt_name": { "type": "string", "title": "Prompt Name" },
          "tags": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Tags"
          },
          "release_labels": {
            "type": ["array", "null"],
            "items": { "type": "string" },
            "title": "Release Labels"
          },
          "prompt_template": {
            "oneOf": [
              { "$ref": "#/components/schemas/CompletionPrompt" },
              { "$ref": "#/components/schemas/ChatPrompt" }
            ],
            "title": "Prompt Template",
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "chat": "#/components/schemas/ChatPrompt",
                "completion": "#/components/schemas/CompletionPrompt"
              }
            }
          },
          "metadata": {
            "anyOf": [
              { "$ref": "#/components/schemas/Metadata" },
              { "type": "null" }
            ]
          },
          "commit_message": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Commit Message"
          }
        },
        "type": "object",
        "required": ["id", "prompt_name", "tags", "prompt_template"],
        "title": "CreatePromptTemplateResponse"
      },
      "ToolCall": {
        "properties": {
          "id": { "type": "string", "title": "Id" },
          "type": {
            "const": "function",
            "title": "Type",
            "default": "function"
          },
          "function": { "$ref": "#/components/schemas/FunctionCall" }
        },
        "type": "object",
        "required": ["id", "function"],
        "title": "ToolCall"
      },
      "ToolMessage": {
        "properties": {
          "input_variables": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Input Variables",
            "default": []
          },
          "template_format": {
            "type": "string",
            "enum": ["f-string", "jinja2"],
            "title": "Template Format",
            "default": "f-string"
          },
          "content": {
            "items": {
              "oneOf": [
                { "$ref": "#/components/schemas/TextContent" },
                { "$ref": "#/components/schemas/ImageContent" }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "image_url": "#/components/schemas/ImageContent",
                  "text": "#/components/schemas/TextContent"
                }
              }
            },
            "type": "array",
            "title": "Content"
          },
          "role": { "const": "tool", "title": "Role", "default": "tool" },
          "tool_call_id": { "type": "string", "title": "Tool Call Id" },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          }
        },
        "type": "object",
        "required": ["content", "tool_call_id"],
        "title": "ToolMessage"
      },
      "Tool": {
        "properties": {
          "type": {
            "const": "function",
            "title": "Type",
            "default": "function"
          },
          "function": { "$ref": "#/components/schemas/Function" }
        },
        "type": "object",
        "required": ["function"],
        "title": "Tool"
      },
      "ChatToolChoice": {
        "properties": {
          "type": {
            "const": "function",
            "title": "Type",
            "default": "function"
          },
          "function": { "$ref": "#/components/schemas/MessageFunctionCall" }
        },
        "type": "object",
        "required": ["function"],
        "title": "ChatToolChoice"
      },
      "ListPromptTemplates": {
        "properties": {
          "has_next": { "type": "boolean", "title": "Has Next" },
          "has_prev": { "type": "boolean", "title": "Has Prev" },
          "items": {
            "items": {
              "$ref": "#/components/schemas/GetPromptTemplateResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "next_num": { "type": "integer", "title": "Next Num" },
          "prev_num": { "type": "integer", "title": "Prev Num" },
          "page": { "type": "integer", "title": "Page" },
          "pages": { "type": "integer", "title": "Pages" },
          "total": { "type": "integer", "title": "Total" }
        },
        "type": "object",
        "required": [
          "has_next",
          "has_prev",
          "items",
          "next_num",
          "prev_num",
          "page",
          "pages",
          "total"
        ],
        "title": "ListPromptTemplates"
      },
      "PlaceholderMessage": {
        "properties": {
          "input_variables": {
            "default": [],
            "items": { "type": "string" },
            "title": "Input Variables",
            "type": "array"
          },
          "template_format": {
            "default": "f-string",
            "enum": ["f-string", "jinja2"],
            "title": "Template Format",
            "type": "string"
          },
          "content": {
            "anyOf": [
              {
                "items": {
                  "discriminator": {
                    "mapping": {
                      "image_url": "#/components/schemas/ImageContent",
                      "text": "#/components/schemas/TextContent"
                    },
                    "propertyName": "type"
                  },
                  "oneOf": [
                    { "$ref": "#/components/schemas/TextContent" },
                    { "$ref": "#/components/schemas/ImageContent" }
                  ]
                },
                "type": "array"
              },
              { "type": "null" }
            ],
            "default": null,
            "title": "Content"
          },
          "raw_request_display_role": {
            "default": "",
            "title": "Raw Request Display Role",
            "type": "string"
          },
          "role": {
            "const": "placeholder",
            "default": "placeholder",
            "enum": ["placeholder"],
            "title": "Role",
            "type": "string"
          },
          "name": { "title": "Name", "type": "string" }
        },
        "required": ["name"],
        "title": "PlaceholderMessage",
        "type": "object"
      },
      "LogRequest": {
        "properties": {
          "provider": { "title": "Provider", "type": "string" },
          "model": { "title": "Model", "type": "string" },
          "input": {
            "discriminator": {
              "mapping": {
                "chat": "#/components/schemas/ChatPrompt",
                "completion": "#/components/schemas/CompletionPrompt"
              },
              "propertyName": "type"
            },
            "oneOf": [
              { "$ref": "#/components/schemas/CompletionPrompt" },
              { "$ref": "#/components/schemas/ChatPrompt" }
            ],
            "title": "Input"
          },
          "output": {
            "discriminator": {
              "mapping": {
                "chat": "#/components/schemas/ChatPrompt",
                "completion": "#/components/schemas/CompletionPrompt"
              },
              "propertyName": "type"
            },
            "oneOf": [
              { "$ref": "#/components/schemas/CompletionPrompt" },
              { "$ref": "#/components/schemas/ChatPrompt" }
            ],
            "title": "Output"
          },
          "request_start_time": {
            "format": "date-time",
            "title": "Request Start Time",
            "type": "string"
          },
          "request_end_time": {
            "format": "date-time",
            "title": "Request End Time",
            "type": "string"
          },
          "parameters": {
            "default": {},
            "title": "Parameters",
            "type": "object"
          },
          "tags": {
            "default": [],
            "items": { "maxLength": 512, "type": "string" },
            "title": "Tags",
            "type": "array"
          },
          "metadata": {
            "additionalProperties": { "type": "string" },
            "default": {},
            "title": "Metadata",
            "type": "object"
          },
          "prompt_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "default": null,
            "title": "Prompt Name"
          },
          "prompt_version_number": {
            "anyOf": [
              { "exclusiveMinimum": 0, "type": "integer" },
              { "type": "null" }
            ],
            "default": null,
            "title": "Prompt Version Number"
          },
          "prompt_input_variables": {
            "default": {},
            "title": "Prompt Input Variables",
            "type": "object"
          },
          "input_tokens": {
            "default": 0,
            "minimum": 0,
            "title": "Input Tokens",
            "type": "integer"
          },
          "output_tokens": {
            "default": 0,
            "minimum": 0,
            "title": "Output Tokens",
            "type": "integer"
          },
          "price": {
            "default": 0.0,
            "minimum": 0.0,
            "title": "Price",
            "type": "number"
          },
          "function_name": {
            "default": "",
            "title": "Function Name",
            "type": "string"
          },
          "score": {
            "default": 0,
            "maximum": 100,
            "minimum": 0,
            "title": "Score",
            "type": "integer"
          }
        },
        "required": [
          "provider",
          "model",
          "input",
          "output",
          "request_start_time",
          "request_end_time"
        ],
        "title": "LogRequest",
        "type": "object"
      },
      "LogRequestResponse": {
        "properties": {
          "id": { "title": "Id", "type": "integer" },
          "prompt_version": {
            "$ref": "#/components/schemas/PromptVersion"
          }
        },
        "required": ["id", "prompt_version"],
        "title": "LogRequestResponse",
        "type": "object"
      },
      "BadRequestError": {
        "properties": {
          "success": {
            "const": false,
            "default": false,
            "enum": [false],
            "title": "Success",
            "type": "boolean"
          },
          "message": { "title": "Message", "type": "string" }
        },
        "required": ["message"],
        "title": "BadRequestError",
        "type": "object"
      }
    }
  }
}
